
object({ 
    name = string 
    vm_size = string 
    capacity_reservation_group_id = optional(string) 
    auto_scaling_enabled = optional(bool, false) 
    host_encryption_enabled = optional(bool) 
    node_public_ip_enabled = optional(bool) 
    gpu_instance = optional(string) 
    host_group_id = optional(string) 
    fips_enabled = optional(bool) 
    kubelet_disk_type = optional(string) 
    max_pods = optional(number) 
    node_public_ip_prefix_id = optional(string) 
    node_labels = optional(map(string)) 
    only_critical_addons_enabled = optional(string) 
    orchestrator_version = optional(string) 
    os_disk_size_gb = optional(string) 
    os_disk_type = optional(string) 
    os_sku = optional(string) 
    pod_subnet_id = optional(string) p
    roximity_placement_group_id = optional(string) 
    scale_down_mode = optional(string) 
    snapshot_id = optional(string) 
    temporary_name_for_rotation = optional(string) 
    type = optional(string, "VirtualMachineScaleSets") 
    tags = optional(map(string)) 
    ultra_ssd_enabled = optional(bool) 
    vnet_subnet_id = optional(string) 
    workload_runtime = optional(string) 
    zones = optional(list(string)) 
    max_count = optional(number) 
    min_count = optional(number) 
    node_count = optional(number) 
    kubelet_config = optional(object(
    { 
        cpu_manager_policy = optional(string) 
        cpu_cfs_quota_enabled = optional(bool, true) 
        cpu_cfs_quota_period = optional(string) 
        image_gc_high_threshold = optional(number) 
        image_gc_low_threshold = optional(number) 
        topology_manager_policy = optional(string) 
        allowed_unsafe_sysctls = optional(set(string)) 
        container_log_max_size_mb = optional(number) 
        container_log_max_line = optional(number) 
        pod_max_pid = optional(number) 
    })) 
    linux_os_config = optional(object(
    { 
        sysctl_config = optional(object(
        { 
            fs_aio_max_nr = optional(number) 
            fs_file_max = optional(number) 
            fs_inotify_max_user_watches = optional(number) 
            fs_nr_open = optional(number) 
            kernel_threads_max = optional(number) 
            net_core_netdev_max_backlog = optional(number) 
            net_core_optmem_max = optional(number) 
            net_core_rmem_default = optional(number) 
            net_core_rmem_max = optional(number) 
            net_core_somaxconn = optional(number) 
            net_core_wmem_default = optional(number) 
            net_core_wmem_max = optional(number) 
            net_ipv4_ip_local_port_range_min = optional(number) 
            net_ipv4_ip_local_port_range_max = optional(number) 
            net_ipv4_neigh_default_gc_thresh1 = optional(number) 
            net_ipv4_neigh_default_gc_thresh2 = optional(number) 
            net_ipv4_neigh_default_gc_thresh3 = optional(number) 
            net_ipv4_tcp_fin_timeout = optional(number) 
            net_ipv4_tcp_keepalive_intvl = optional(number) 
            net_ipv4_tcp_keepalive_probes = optional(number) 
            net_ipv4_tcp_keepalive_time = optional(number) 
            net_ipv4_tcp_max_syn_backlog = optional(number) 
            net_ipv4_tcp_max_tw_buckets = optional(number) 
            net_ipv4_tcp_tw_reuse = optional(bool) 
            net_netfilter_nf_conntrack_buckets = optional(number) 
            net_netfilter_nf_conntrack_max = optional(number) 
            vm_max_map_count = optional(number) 
            vm_swappiness = optional(number) 
            vm_vfs_cache_pressure = optional(number) 
        })) 
        transparent_huge_page_enabled = optional(string) 
        transparent_huge_page_defrag = optional(string) 
        swap_file_size_mb = optional(number) 
    })) 
    upgrade_settings = optional(object(
    { 
        drain_timeout_in_minutes = optional(number) 
        node_soak_duration_in_minutes = optional(number) 
        max_surge = string 
    })) 
})